services:
    php:
        build:
            context: .
            target: production
            dockerfile: Dockerfile.prod
        ports:
            # Since the "serversideup/php:8.2-fpm-nginx" image is not privileged (that means it runs as the OS-native www-data user), it doesn't run on ports less than 1024.
            # Therefore, the default ports for the image are => HTTP: 8080, HTTPS: 8443.
            # So we use Docker's port mapping feature to map the host port to the container port (HOST:CONTAINER).
            # https://serversideup.net/open-source/docker-php/docs/getting-started/default-configurations#unprivileged-by-default
            - 80:8080
            - 443:8443
        volumes:
            - .:/var/www/html
        depends_on:
            - mysql
        networks:
            - curriculum-mapping-tool

    mysql:
        image: mysql:8.0
        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - curriculum-mapping-tool-mysql:/var/lib/mysql
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
        networks:
            - curriculum-mapping-tool

    npm:
        image: node:20.15
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm']

networks:
    curriculum-mapping-tool:
        driver: bridge

volumes:
    curriculum-mapping-tool-mysql:
        driver: local
